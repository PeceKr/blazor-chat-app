@page "/"
@inject NavigationManager NavigationManager;
@inject IJSRuntime JsRuntime;
@implements IAsyncDisposable

<PageTitle>Simpla chat app</PageTitle>

@if(!IsConnected)
{
    <div class="input-group">
        <input @bind="_userName" class="form-control" placeholder="enter your name">
        <button class="btn btn-primary form-control-append" @onclick="Connect"> Connect</button>
    </div>
}

else
{
    <textArea style="width: 100%; height: 500px;" @ref="MessagesArea">
        @_messages
    </textArea>
    <div class="input-group">
        <input @bind-value="_message"
        @bind-value:event="oninput"
        @onkeyup="HandleInput"
        class="form-control">
        <button class="btn btn-primary form-group-append" @onclick="Send">Send</button>
    </div>
}

@code{
    private HubConnection? _hubConnection;
    private string? _messages;
    private string? _message;
    private string? _userName ;
    ElementReference MessagesArea;


    private async Task Connect () {
        _hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri($"/chat-hub?username={_userName}")).Build();

        _hubConnection.On<string,string>("GetMessage", (user,message) => {
            var msg = $"{(string.IsNullOrEmpty(user) ? "" : user + " : ")} {message}";
            _messages += msg + "\n";
            JsRuntime.InvokeVoidAsync("scrollToBottom" , MessagesArea);
            StateHasChanged();
        });
        await _hubConnection.StartAsync();
    }

    private async Task Send () {
        if(_hubConnection != null)
        {
            await _hubConnection.SendAsync("SendMessage", _userName, _message);
            _message = string.Empty;
        }
    }

    public bool IsConnected => _hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync() {
        if(_hubConnection != null){
            await _hubConnection.DisposeAsync();
        }
    }
    private async Task HandleInput(KeyboardEventArgs args)
    {
        if(args.Key.Equals("Enter"))       
            await Send();        
    }
}
